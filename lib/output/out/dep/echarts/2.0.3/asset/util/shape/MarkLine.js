/*! @2014 Leo Wang. All Rights Reserved */
define("echarts/util/shape/MarkLine",["require","zrender/shape/Base","./Icon","zrender/shape/Line","zrender/shape/BrokenLine","zrender/tool/matrix","zrender/tool/area","zrender/shape/util/dashedLineTo","zrender/shape/util/smoothSpline","zrender/tool/util"],function(require){function e(e){t.call(this,e)}var t=require("zrender/shape/Base"),n=require("./Icon"),i=require("zrender/shape/Line"),a=new i({}),o=require("zrender/shape/BrokenLine"),s=new o({}),l=require("zrender/tool/matrix"),r=require("zrender/tool/area"),V=require("zrender/shape/util/dashedLineTo"),U=require("zrender/shape/util/smoothSpline"),h=require("zrender/tool/util");return e.prototype={type:"mark-line",brush:function(e,t){var n=this.style;if(t)n=this.getHighlightStyle(n,this.highlightStyle||{});e.save(),this.setContext(e,n),this.setTransform(e),e.save(),e.beginPath(),this.buildLinePath(e,n),e.stroke(),e.restore(),this.brushSymbol(e,n,0),this.brushSymbol(e,n,1),this.drawText(e,n,this.style),e.restore()},buildLinePath:function(e,t){var n=t.pointList||this.getPointList(t);t.pointList=n;var i=Math.min(t.pointList.length,Math.round(t.pointListLength||t.pointList.length));if(!t.lineType||"solid"==t.lineType){e.moveTo(n[0][0],n[0][1]);for(var a=1;i>a;a++)e.lineTo(n[a][0],n[a][1])}else if("dashed"==t.lineType||"dotted"==t.lineType)if("spline"!==t.smooth){var o=(t.lineWidth||1)*("dashed"==t.lineType?5:1);e.moveTo(n[0][0],n[0][1]);for(var a=1;i>a;a++)V(e,n[a-1][0],n[a-1][1],n[a][0],n[a][1],o)}else for(var a=1;i>a;a+=2)e.moveTo(n[a-1][0],n[a-1][1]),e.lineTo(n[a][0],n[a][1])},brushSymbol:function(e,t,i){if("none"!=t.symbol[i]){if(e.save(),e.beginPath(),e.lineWidth=t.symbolBorder,e.strokeStyle=t.symbolBorderColor,t.iconType=t.symbol[i].replace("empty","").toLowerCase(),t.symbol[i].match("empty"))e.fillStyle="#fff";var a,o=Math.min(t.pointList.length,Math.round(t.pointListLength||t.pointList.length)),s=0===i?t.pointList[0][0]:t.pointList[o-1][0],r=0===i?t.pointList[0][1]:t.pointList[o-1][1],V="undefined"!=typeof t.symbolRotate[i]?t.symbolRotate[i]-0:0;if(0!==V){if(a=l.create(),l.identity(a),s||r)l.translate(a,a,[-s,-r]);if(l.rotate(a,a,V*Math.PI/180),s||r)l.translate(a,a,[s,r]);e.transform.apply(e,a)}if("arrow"==t.iconType&&0===V)this.buildArrawPath(e,t,i);else{var U=t.symbolSize[i];t.x=s-U,t.y=r-U,t.width=2*U,t.height=2*U,n.prototype.buildPath(e,t)}e.closePath(),e.fill(),e.stroke(),e.restore()}},buildArrawPath:function(e,t,n){var i=Math.min(t.pointList.length,Math.round(t.pointListLength||t.pointList.length)),a=2*t.symbolSize[n],o=t.pointList[0][0],s=t.pointList[i-1][0],l=t.pointList[0][1],r=t.pointList[i-1][1],V=0;if("spline"===t.smooth)V=.2;var U=Math.atan(Math.abs((r-l)/(o-s)));if(0===n)if(s>o)if(r>l)U=2*Math.PI-U+V;else U+=V;else if(r>l)U+=Math.PI-V;else U=Math.PI-U-V;else if(o>s)if(l>r)U=2*Math.PI-U+V;else U+=V;else if(l>r)U+=Math.PI-V;else U=Math.PI-U-V;var h=Math.PI/8,m=0===n?o:s,p=0===n?l:r,d=[[m+a*Math.cos(U-h),p-a*Math.sin(U-h)],[m+.6*a*Math.cos(U),p-.6*a*Math.sin(U)],[m+a*Math.cos(U+h),p-a*Math.sin(U+h)]];e.moveTo(m,p);for(var c=0,y=d.length;y>c;c++)e.lineTo(d[c][0],d[c][1]);e.lineTo(m,p)},getPointList:function(e){var t=[[e.xStart,e.yStart],[e.xEnd,e.yEnd]];if("spline"===e.smooth){var n=t[1][0],i=t[1][1];t[3]=[n,i],t[1]=this.getOffetPoint(t[0],t[3]),t[2]=this.getOffetPoint(t[3],t[0]),t=U(t,!1),t[t.length-1]=[n,i]}return t},getOffetPoint:function(e,t){var n,i=Math.sqrt(Math.round((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1])))/3,a=[e[0],e[1]],o=.2;if(e[0]!=t[0]&&e[1]!=t[1]){var s=(t[1]-e[1])/(t[0]-e[0]);n=Math.atan(s)}else if(e[0]==t[0])n=(e[1]<=t[1]?1:-1)*Math.PI/2;else n=0;var l,r;if(e[0]<=t[0])n-=o,l=Math.round(Math.cos(n)*i),r=Math.round(Math.sin(n)*i),a[0]+=l,a[1]+=r;else n+=o,l=Math.round(Math.cos(n)*i),r=Math.round(Math.sin(n)*i),a[0]-=l,a[1]-=r;return a},getRect:function(e){if(e.__rect)return e.__rect;var t=e.lineWidth||1;return e.__rect={x:Math.min(e.xStart,e.xEnd)-t,y:Math.min(e.yStart,e.yEnd)-t,width:Math.abs(e.xStart-e.xEnd)+t,height:Math.abs(e.yStart-e.yEnd)+t},e.__rect},isCover:function(e,t){var n=this.getTansform(e,t);e=n[0],t=n[1];var i=this.style.__rect;if(!i)i=this.style.__rect=this.getRect(this.style);if(e>=i.x&&e<=i.x+i.width&&t>=i.y&&t<=i.y+i.height)return"spline"!==this.style.smooth?r.isInside(a,this.style,e,t):r.isInside(s,this.style,e,t);else return!1}},h.inherits(e,t),e});